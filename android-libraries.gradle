apply plugin: 'com.android.library'
apply plugin: 'maven'

def groupId = 'com.microsoft.azure'

def BINTRAY_USERNAME = "$System.env.BINTRAY_USERNAME"
def BINTRAY_APIKEY = "$System.env.BINTRAY_APIKEY"

def isCI = project.hasProperty('isCI') ? Boolean.valueOf(isCI) : false
def repoUrl = isCI ? "file://" + "$System.env.BUILD_ARTIFACTSTAGINGDIRECTORY" : REPO_URL

task clearJar(type: Delete) {
    delete 'build/release/' + PUBLISH_ARTIFACT_ID + '-' + VERSION + '.jar'
}

// step 1
task makeJar(type: Copy) {
    from('build/intermediates/aar_main_jar/release/')
    into('build/release/')
    include('classes.jar')
    rename ('classes.jar', PUBLISH_ARTIFACT_ID + '-' +  VERSION + '.jar')
}

makeJar.dependsOn(clearJar, build)


// step 2
uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = PUBLISH_ARTIFACT_ID
        pom.version = VERSION
        pom.project {
            packaging 'aar'
            name NAME
            description DESCRIPTION
            url 'https://github.com/Azure/azure-notificationhubs-android'
        }
        repository (
            url: repoUrl
        ) {
            authentication(
                userName: BINTRAY_USERNAME,
                password: BINTRAY_APIKEY
            )
        }
    }
}

uploadArchives.dependsOn(makeJar)

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
    archives file : file('build/release/' + PUBLISH_ARTIFACT_ID + '-' + VERSION + '.jar')
}